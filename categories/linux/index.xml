<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>linux - 分类 - 菜狗瑞的学习周记</title>
        <link>https://testoai.github.io/categories/linux/</link>
        <description>linux - 分类 - 菜狗瑞的学习周记</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 18 Apr 2021 00:00:00 &#43;0800</lastBuildDate><atom:link href="https://testoai.github.io/categories/linux/" rel="self" type="application/rss+xml" /><item>
    <title>crontab</title>
    <link>https://testoai.github.io/posts/crontab/</link>
    <pubDate>Sun, 18 Apr 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://testoai.github.io/posts/crontab/</guid>
    <description><![CDATA[<h2 id="介绍">介绍</h2>
<p><code>crontab</code>在<code>Linux</code>系统中用于执行定时任务，比如服务巡检，日志备份清理，数据库备份</p>
<p>在<code>Centos7</code>中，最小安装会有该服务，进程名是<code>crond</code></p>
<h2 id="crontab文件详解"><code>crontab</code>文件详解</h2>
<ul>
<li>
<p>1.<code>/var/spool/cron/</code>：该目录存放着每个用户设置的任务，文件以用户名命名</p>
</li>
<li>
<p>2.<code>/var/log/cron</code>：该文件是<code>crontab</code>的日志文件，当任务执行没有成功时可以查看该日志排查</p>
</li>
<li>
<p>3.<code>/etc/crontab</code>：该文件用来管理定时任务，默认有<code>root</code>用户可以编辑可以修改权限给其他用户编辑</p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="nv">SHELL</span><span class="o">=</span>/bin/bash
<span class="nv">PATH</span><span class="o">=</span>/sbin:/bin:/usr/sbin:/usr/bin
<span class="nv">MAILTO</span><span class="o">=</span>root

<span class="c1"># For details see man 4 crontabs</span>

<span class="c1"># Example of job definition:</span>
<span class="c1"># .---------------- minute (0 - 59)</span>
<span class="c1"># | .------------- hour (0 - 23)</span>
<span class="c1"># | | .---------- day of month (1 - 31)</span>
<span class="c1"># | | | .------- month (1 - 12) OR jan,feb,mar,apr ...</span>
<span class="c1"># | | | | .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span>
<span class="c1"># | | | | |</span>
<span class="c1"># * * * * * user-name command to be executed</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="顶部环境相关部分">顶部环境相关部分</h3>
<ul>
<li><code>SHELL=/bin/bash</code>：表示使用<code>/bin/bash</code>解释命令</li>
<li><code>PATH=/sbin:/bin:/usr/sbin:/usr/bin</code>：表示到哪些目录寻找命令执行程序</li>
<li><code>MAILTO</code>：当某个任务执行有输出时，输出内容将发送到那个用户的邮箱，为空则不发送</li>
</ul>
<h3 id="底部定时任务配置部分">底部定时任务配置部分</h3>
<ul>
<li>下面是整个文件的核心部分</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="c1"># .---------------- minute (0 - 59)</span>
<span class="c1"># | .------------- hour (0 - 23)</span>
<span class="c1"># | | .---------- day of month (1 - 31)</span>
<span class="c1"># | | | .------- month (1 - 12) OR jan,feb,mar,apr ...</span>
<span class="c1"># | | | | .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span>
<span class="c1"># | | | | |</span>
<span class="c1"># * * * * * user-name command to be executed</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="时间部分">时间部分</h4>
<p><code>* * * * *</code>表示的是时间配置</p>
<ul>
<li>第一个*表示分钟，取值范围在0~59之间的整数</li>
<li>第二个*表示小时，取值范围在0~23之间的整数</li>
<li>第三个*表示日期，根据下面指定月份中的天数取值</li>
<li>第四个*表示月份，取值范围在1~12之间的整数</li>
<li>第五个*表示星期，取值范围在1~7之间的整数</li>
</ul>
<p>特殊符号：</p>
<ul>
<li><code>*</code>：代表规则范围内的任意值，如果设置该值的是分钟，则在满足其他条件下的情况下，每分钟都会执行</li>
<li><code>,</code>：将指定的值隔开，如在分钟中使用，<code>1,18,23</code>，在满足其他条件情况下，在1、18、23分钟都会执行</li>
<li><code>-</code>：用于指定取值范围，如在分钟中使用，<code>1-5</code>，则表示的是1、2、3、4、5分钟</li>
<li><code>/</code>：用于指定时间的执行频率，如在分钟中使用，<code>0-30/2</code>，则表示的是在30分钟之内，每隔两分钟执行一次</li>
</ul>
<h4 id="时间配置验证">时间配置验证</h4>
<p><code>https://crontab.guru/</code></p>
<p>上面网址会对配置的时间验证</p>
<h4 id="命令部分">命令部分</h4>
<p><code>user-name command to be executed</code>表示的是用户和执行的命令</p>
<p>因为环境变量的原因，可能有很多在终端执行的命令，放到<code>crontab</code>里面执行不了，所以最好写绝对路径</p>
<p>环境变量的问题下面会详细写下，现在先写一个例子</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback"># .---------------- minute (0 - 59)
# | .------------- hour (0 - 23)
# | | .---------- day of month (1 - 31)
# | | | .------- month (1 - 12) OR jan,feb,mar,apr ...
# | | | | .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# | | | | |
# * * * * * user-name command to be executed
  */2 * * * * /usr/sbin/ntpdate s1a.time.edu.cn
</code></pre></td></tr></table>
</div>
</div><p>上面的例子是每两分钟同步一次<code>s1a.time.edu.cn</code>的时间</p>
<h2 id="crontab的环境变量">crontab的环境变量</h2>
<p><code>crontab</code>默认不会加载用户和系统设置的环境变量，所以一些命令在终端可以执行但是在<code>crontab</code>执行不了</p>
<ul>
<li>解决方法
<ul>
<li>1.在<code>crontab</code>添加任务时写绝对路径</li>
<li>2.把刷新环境变量的命令添加到<code>crontab</code>中，只适用于<code>root</code>用户</li>
<li>3.可以在对应的任务之前添加一段使系统环境变量生效的命令</li>
<li>4.可以把要执行的文件所在目录添加到<code>PATH</code>中</li>
</ul>
</li>
</ul>
<h2 id="crontab相关命令">crontab相关命令</h2>
<p><code>crontab -l</code>：列出当前用户的所有任务</p>
<p><code>crontab -e</code>：编辑当前用户的任务，上面说普通用户没有办法把任务加到<code>/etc/crontab</code>中，但是可以使用这条命令添加属于自己的任务，格式与<code>/etc/crontab</code>相同</p>
<p><code>crontab /etc/crontab</code>：用于<code>root</code>用户编辑完<code>/etc/crontab</code>后刷新任务列表</p>
<p><code>crontab -r</code>：删除当前用户的所有任务，<strong><u>注意是删除所有，慎用</u></strong></p>
]]></description>
</item><item>
    <title>linux(Centos7)相关命令 持续更新...</title>
    <link>https://testoai.github.io/posts/linuxcentos7%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</link>
    <pubDate>Sat, 10 Apr 2021 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://testoai.github.io/posts/linuxcentos7%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</guid>
    <description><![CDATA[<h1 id="开篇啰嗦">开篇啰嗦</h1>
<p>啥时候更新时间间隔超过三个月我就把持续更新去掉</p>
<p>话说作为一个测试，是不是应该先记录测试相关的</p>
<p>唉，在公司学的最多的就是linux</p>
<p>先写这个吧，明天再写一篇测试相关的</p>
<h2 id="文件操作相关">文件操作相关</h2>
<h3 id="文件拷贝-cp">文件拷贝 cp</h3>
<ul>
<li>拷贝文件：<code>cp 要拷贝的文件 目标路径</code></li>
<li>拷贝文件<code>redis.conf</code>到<code>/etc/</code>目录下</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-tex" data-lang="tex">[root@rui redis-6.2.0]# cp redis.conf /etc/
[root@rui redis-6.2.0]# ls /etc/redis.conf 
/etc/redis.conf
</code></pre></td></tr></table>
</div>
</div><ul>
<li>拷贝文件夹：<code>cp -r 要拷贝的文件夹 目标路径</code></li>
<li>拷贝文件夹<code>redis-6.2.0</code>到<code>/usr/local/</code>目录下</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-tex" data-lang="tex">[root@rui home]# cp -r redis-6.2.0/ /usr/local/
[root@rui home]# ls /usr/local/
bin  games    lib    libexec  redis-6.2.0  share
etc  include  lib64  proc     sbin         src
</code></pre></td></tr></table>
</div>
</div><h3 id="文件移动-mv">文件移动 mv</h3>
<ul>
<li>移动文件夹/文件：<code>mv 要移动的文件夹或者是文件 目标路径</code></li>
<li>移动文件<code>redis.conf</code>到<code>src</code>目录下</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-tex" data-lang="tex">[root@rui redis-6.2.0]# mv redis.conf src/
[root@rui redis-6.2.0]# ls src/redis.conf 
src/redis.conf
</code></pre></td></tr></table>
</div>
</div><h3 id="文件查找">文件查找</h3>
<ul>
<li>方式一：<code>find 要查找的路径 -name 要查找的文件</code></li>
<li><code>find</code>会遍历指定路径下的所有文件，然后返回符合条件的，支持模糊查询</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-tex" data-lang="tex">[root@rui redis-6.2.0]# find ./ -name redis.c*
./src/redis.conf
</code></pre></td></tr></table>
</div>
</div><ul>
<li>方式二：<code>locate 要查找的文件</code></li>
<li><code>locate</code> 在<code>/var/lib/mlocate/</code>目录下存放着一个数据库文件，其实使用<code>locate</code>查询是查询的数据库，所以<code>locate</code>非常快</li>
<li><code>locate</code>会返回所有包含文件名的文件</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-tex" data-lang="tex">[root@rui redis-6.2.0]# locate /home/redis-6.2.0/src/red
/home/redis-6.2.0/src/redis-benchmark
/home/redis-6.2.0/src/redis-benchmark.c
/home/redis-6.2.0/src/redis-benchmark.d
/home/redis-6.2.0/src/redis-benchmark.o
/home/redis-6.2.0/src/redis-check-aof
/home/redis-6.2.0/src/redis-check-aof.c
/home/redis-6.2.0/src/redis-check-aof.d
/home/redis-6.2.0/src/redis-check-aof.o
/home/redis-6.2.0/src/redis-check-rdb
/home/redis-6.2.0/src/redis-check-rdb.c
/home/redis-6.2.0/src/redis-check-rdb.d
/home/redis-6.2.0/src/redis-check-rdb.o
/home/redis-6.2.0/src/redis-cli
/home/redis-6.2.0/src/redis-cli.c
/home/redis-6.2.0/src/redis-cli.d
/home/redis-6.2.0/src/redis-cli.o
/home/redis-6.2.0/src/redis-sentinel
/home/redis-6.2.0/src/redis-server
/home/redis-6.2.0/src/redis-trib.rb
/home/redis-6.2.0/src/redis.conf
/home/redis-6.2.0/src/redisassert.h
/home/redis-6.2.0/src/redismodule.h
</code></pre></td></tr></table>
</div>
</div><p>然后新建一个文件，再查询一次</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-tex" data-lang="tex">[root@rui redis-6.2.0]# &gt; /home/redis-6.2.0/src/testfile
[root@rui redis-6.2.0]# locate /home/redis-6.2.0/src/testf
[root@rui redis-6.2.0]# ll /home/redis-6.2.0/src/testfile 
-rw-r--r--. 1 root root 0 Apr 10 22:37 /home/redis-6.2.0/src/testfile
</code></pre></td></tr></table>
</div>
</div><p>可以看到，没有查到，因为<code>locate</code>的数据库不是实时更新的，可以使用<code>updatedb</code>手动更新，也可以把更新命令配置到系统的任务计划表，定时执行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-tex" data-lang="tex">[root@rui redis-6.2.0]# updatedb
[root@rui redis-6.2.0]# locate /home/redis-6.2.0/src/testf
/home/redis-6.2.0/src/testfile
</code></pre></td></tr></table>
</div>
</div><p>可以看到更新之后就查到了</p>
<p>2021-05-13：</p>
<h3 id="文件权限相关">文件权限相关</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">[root@rui nginx]# ll
total 12
drwx------ 2 root root    6 Mar  8 11:49 client_body_temp
drwxr-xr-x 2 root root 4096 May 10 11:39 conf
drwx------ 2 root root    6 Mar  8 11:49 fastcgi_temp
drwxr-xr-x 2 root root   38 Mar  8 10:50 html
drwxr-xr-x 2 root root   55 Mar 29 10:01 logs
-rw-r--r-- 1 root root 4796 May 11 20:14 nginx.conf
drwx------ 3 root root   14 Apr 29 10:04 proxy_temp
drwxr-xr-x 2 root root   18 Mar  8 10:50 sbin
drwx------ 2 root root    6 Mar  8 11:49 scgi_temp
drwx------ 2 root root    6 Mar  8 11:49 uwsgi_temp
</code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>total 12</p>
<p>linux的数据存储是以块（block）为单位的，块可以理解成一个容器，每个块的大小可以用<code>getconf PAGESIZE</code>命令查看</p>
<p>每个块的容量是4096B，也就是4K</p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-go" data-lang="go"><span class="nx">drwx</span><span class="o">------</span> <span class="mi">2</span> <span class="nx">root</span> <span class="nx">root</span>    <span class="mi">6</span> <span class="nx">Mar</span>  <span class="mi">8</span> <span class="mi">11</span><span class="p">:</span><span class="mi">49</span> <span class="nx">client_body_temp</span>
</code></pre></td></tr></table>
</div>
</div><p><code>drwx------</code></p>
<ul>
<li>
<p>d：表示文件夹，如果是-，则代表是文件</p>
</li>
<li>
<p>r：表示有可读权限，用数字表示为4</p>
</li>
<li>
<p>w：表示有可写权限，用数字表示为2</p>
</li>
<li>
<p>x：表示有可执行权限，用数字表示为1</p>
</li>
<li>
<p>rwx：文件权限</p>
<ul>
<li>
<p>一个rwx可以理解为为一组权限，一个文件有三组，第一组为文件所属用户，第二组为所属用户组内的其他用户，第三组为其他用户</p>
</li>
<li>
<p>如果显示为&quot;-&ldquo;符号则表示没有权限</p>
</li>
<li>
<p>设置权限可以使用<code>chmod</code></p>
</li>
</ul>
<p><code>chmod 741 filename</code></p>
<ul>
<li>741：
<ul>
<li>文件所属用户有该文件的可读、可写、可执行权限</li>
<li>文件所属用户组内的其它用户有该文件的可读权限</li>
<li>其他用户有该文件的可执行权限</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><code>drwx------ 2 root root 6 Mar  8 11:49 client_body_temp</code></p>
<ul>
<li>2：硬连接个数</li>
<li>第一个root：文件所属用户</li>
<li>第二个root：文件所属用户的组</li>
<li>6：文件大小</li>
<li>Mar  8 11:49：最后修改时间</li>
<li>client_body_temp：文件名/目录名</li>
</ul>
<h2 id="vim相关"><code>vim</code>相关</h2>
<h3 id="进入编辑模式">进入编辑模式</h3>
<ul>
<li>按<code>i</code>进入编辑模式后光标会在当前位置</li>
<li>按<code>I</code>进入编辑模式后光标会在当前行行首</li>
<li>按<code>a</code>进入编辑模式后，光标在当前字符后</li>
<li>按<code>A</code>进入编辑模式后，光标会在当前行行尾</li>
<li>按<code>o</code>进入编辑模式后，会在当前行下一行新开一行</li>
<li>按<code>O</code>进入编辑模式后，会在当前行上一行新开一行</li>
</ul>
<p><code>我用的最多的是i</code></p>
<h3 id="退出编辑模式">退出编辑模式</h3>
<ul>
<li>按<code>ESC</code>退出编辑模式</li>
</ul>
<h3 id="查找">查找</h3>
<ul>
<li>使用：<code>/要查找的内容</code></li>
<li>使用<code>vim /文件名</code>打开文件后，输入<code>/</code>要查找的内容即可，比如下面我要在<code>redis.conf</code>配置文件中查找<code>bind</code>关键字</li>
</ul>
<a class="lightgallery" href="/img/image-20210410145934938.png" title="/img/image-20210410145934938.png" data-thumbnail="/img/image-20210410145934938.png">
        
    </a>
<ul>
<li>
<p>然后可以输入回车，会查找到该文件中第一个<code>bind</code>，可以输入<code>n</code>定位到下一个，输入<code>N</code>定位到上一个</p>
</li>
<li>
<p>取消高亮可以输入<code>nohlsearch</code>，简写为<code>noh</code>，也可以输入<code>set nohlsearch</code> ，简写为<code>set noh</code></p>
</li>
</ul>
<h3 id="替换">替换</h3>
<ul>
<li>
<p>把文件中的所有<code>127.0.0.1</code>替换为<code>120.5.5.153</code></p>
<ul>
<li>使用：<code>:%s/127.0.0.1/120.5.5.153/g</code></li>
</ul>
</li>
<li>
<p>把当前行的<code>127.0.0.1</code>替换为<code>120.5.5.153</code></p>
<ul>
<li>使用：<code>:S/127.0.0.1/120.5.5.153/g</code></li>
</ul>
</li>
</ul>
<p><code>还有很多替换相关的命令，这里只是写了常用的</code></p>
<h3 id="退出">退出</h3>
<ul>
<li>退出不保存<code>:q</code></li>
<li>强制退出不保存<code>:q!</code></li>
<li>保存并退出<code>:wq</code></li>
<li>强制保存并退出<code>:wq!</code></li>
</ul>
<h2 id="查看日志">查看日志</h2>
<h3 id="实时刷新查看日志">实时刷新查看日志</h3>
<ul>
<li>方式一：使用：<code>tail -f -n 10 日志文件名称</code>
<ul>
<li><code>-f</code>：实时刷新</li>
<li><code>-n</code>：行数关键字，后面跟行数，表示从后10行开始查看</li>
</ul>
</li>
<li>方式二：使用：<code>tailf 日志文件名称</code>
<ul>
<li>默认从后十行开始查看</li>
</ul>
</li>
</ul>
<h3 id="查看日志前10行">查看日志前10行</h3>
<ul>
<li>使用：<code>head -n 行数 日志文件名称</code>
<ul>
<li><code>-n</code> ：行数关键字</li>
</ul>
</li>
</ul>
<h3 id="查看第10行到第20行">查看第10行到第20行</h3>
<ul>
<li>方式一：使用：<code>sed -n '10,20p' 日志文件名称</code>
<ul>
<li><code>-n</code>：打印制定行</li>
<li><code>'10,20p'</code>：指定的行号</li>
</ul>
</li>
<li>方式二：使用：<code>cat -n 日志文件名称 | head -n 20 | tail -n +10</code>
<ul>
<li><code>cat -n</code>：打印日志显示行号</li>
<li><code>head -n 20</code>：打印到20行</li>
<li><code>tail -n +10</code>：从第10行开始打印</li>
</ul>
</li>
</ul>
<p>2021.04.20</p>
<h2 id="查看进程">查看进程</h2>
<h3 id="ps命令">ps命令</h3>
<p>ps （英文全拼：process status）命令用于显示当前进程的状态 &ndash;摘自菜鸟教程</p>
<h4 id="参数">参数</h4>
<ul>
<li>-a：列出所有进程</li>
<li>-w：显示加宽，可以显示更多内容</li>
<li>-u：以用户为主的进程状态</li>
<li>-x：显示当前用户在所有终端下的进程信息，通常和参数<code>a</code>一起使用</li>
<li>-e：显示系统内所有的进程信息</li>
<li>-l：使用长格式显示进程信息</li>
<li>-f：使用完整的格式显示进程信息</li>
</ul>
<h4 id="筛选">筛选</h4>
<ul>
<li>在输入了上面命令后添加<code>|grep processName/processID</code></li>
<li><code>ps -aux |grep mysql</code></li>
</ul>
<h3 id="根据进程查找文件">根据进程查找文件</h3>
<ul>
<li>
<p>当因为某种原因找不到服务的存放位置时，可以使用上面的命令先查看进程的ID</p>
</li>
<li>
<p>然后使用命令：<code>pwdx processID</code>命令查找该进程文件存放的位置</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>root@rabbitmq1 redis<span class="o">]</span><span class="c1"># ps -aux |grep redis</span>
redis     <span class="m">4356</span>  0.1  2.3 <span class="m">323184</span> <span class="m">133272</span> ?       Ssl  4月19  25:12 /usr/bin/redis-server *:6379
root      <span class="m">7194</span>  0.0  0.0 <span class="m">112736</span>   <span class="m">996</span> pts/1    S+   11:23   0:00 grep --color<span class="o">=</span>auto redis
<span class="o">[</span>root@rabbitmq1 redis<span class="o">]</span><span class="c1"># pwdx 4356</span>
4356: /var/lib/redis
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
<h2 id="查看端口号是否被监听">查看端口号是否被监听</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>root@pacs local<span class="o">]</span><span class="c1"># ss -tunlp |grep 3306</span>
tcp    LISTEN     <span class="m">0</span>      <span class="m">128</span>       *:3306      *:*    users:<span class="o">((</span><span class="s2">&#34;docker-proxy&#34;</span>,pid<span class="o">=</span>28320,fd<span class="o">=</span>4<span class="o">))</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
